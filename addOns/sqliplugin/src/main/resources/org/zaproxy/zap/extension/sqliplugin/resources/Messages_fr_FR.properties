sqliplugin.alert.desc = Une injection SQL est possible \u00e0 l\u2019aide de la charge utile attach\u00e9e
sqliplugin.alert.info.booleanbased = La r\u00e9sultats de la page ont \u00e9t\u00e9 manipul\u00e9s en utilisant les conditions bool\u00e9ennes [{0}] et [{1}]\nLe code HTML de la valeur modifi\u00e9e du param\u00e8tre a \u00e9t\u00e9 supprim\u00e9e pour permettre la comparaison.\nDes donn\u00e9es ont \u00e9t\u00e9 retourn\u00e9es pour le param\u00e8tre d''origine.\nLa vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e en restreignant avec succ\u00e8s les donn\u00e9es initialement renvoy\u00e9es, en manipulant le param\u00e8tre.
sqliplugin.alert.info.errorbased = SGBDR [{0}] probable, compte tenu du fragment de message d''erreur [{1}] dans les r\u00e9sultats de l''HTML.\nLa vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e en manipulant le param\u00e8tre pour provoquer le retour d''un message d''erreur de base de donn\u00e9es et le reconna\u00eetre.
sqliplugin.alert.info.timebased = Le temps de la requ\u00eate est contr\u00f4lable \u00e0 l''aide de la valeur du param\u00e8tre [{0}], qui lui fait ainsi prendre [{1}] millisecondes, alors que la requ\u00eate d''origine, non modifi\u00e9e avec la valeur [{2}] prend quant \u00e0 elle, en moyenne, [{3}] millisecondes.
sqliplugin.alert.info.unionbased = RDBMS [{0}] probable, en raison du fragment de message d''erreur sp\u00e9cifique \u00e0 l''UNION pour les colonnes [{1}] \n\nLa vuln\u00e9rabilit\u00e9 a \u00e9t\u00e9 d\u00e9tect\u00e9e en manipulant le param\u00e8tre avec une clause SQL ''UNION'' pour provoquer le retour d''un message d''erreur de la base de donn\u00e9es  et sa reconnaissance.
sqliplugin.alert.name = Injection SQL Avanc\u00e9e - {0}
sqliplugin.alert.refs = https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
sqliplugin.alert.soln = Ne faites pas confiance aux entr\u00e9es c\u00f4t\u00e9 client, m\u00eame s'il y a une validation c\u00f4t\u00e9 client en place.\nEn g\u00e9n\u00e9ral, v\u00e9rifiez le type de toutes les donn\u00e9es c\u00f4t\u00e9 serveur.\nSi l'application utilise JDBC, utilisez PreparedStatement ou CallableStatement, avec les param\u00e8tres pass\u00e9s avec '?'\nSi l'application utilise ASP, utilisez les commandes d'objets ADO avec une v\u00e9rification du type stricte et des requ\u00eates param\u00e9tr\u00e9es.\nSi la base de donn\u00e9es propose des proc\u00e9dures stock\u00e9es, utilisez-les.\nNe concat\u00e9nez *jamais* des cha\u00eenes de caract\u00e8res dans les requ\u00eates des proc\u00e9dures stock\u00e9es. N'utilisez pas 'exec', 'exec immediate' ni aucune fonctionnalit\u00e9 \u00e9quivalente \!\nNe cr\u00e9ez pas de requ\u00eates SQL dynamiques avec de la simple concat\u00e9nation de cha\u00eenes de caract\u00e8res.\n\u00c9chappez toutes les donn\u00e9es re\u00e7ues depuis le client.\nAppliquez une liste d'autorisation des caract\u00e8res autoris\u00e9s, ou une liste de refus des caract\u00e8res interdits sur les entr\u00e9es utilisateur.\nAppliquez le principe du moindre privil\u00e8ge en utilisant un utilisateur non privil\u00e9gi\u00e9 pour se connecter \u00e0 la base de donn\u00e9es.\nEn particulier, \u00e9vitez d'utiliser les utilisateurs 'sa' ou 'db-owner'. Cela n'\u00e9liminera pas les injections SQL, mais minimisera ses impacts.\nAjustez les droits d'acc\u00e8s \u00e0 la base de donn\u00e9es au minimum n\u00e9cessaire pour l'application.

sqliplugin.ext.desc = Extension d\u2019aide pour le plug-in d'injection SQL avanc\u00e9.
sqliplugin.ext.name = Injection SQL avanc\u00e9e

sqliplugin.name = Injection SQL avanc\u00e9e
